% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SignalExtractMatSignalExtractJP.R
\name{MatSignalExtractJP}
\alias{MatSignalExtractJP}
\title{Matrix Signal Extraction}
\usage{
MatSignalExtractJP(
  X,
  matName = NULL,
  nsim = 400,
  colCent = F,
  rowCent = F,
  cull = 0.382,
  percentile = 0.5,
  noiselvl = NULL
)
}
\arguments{
\item{X}{A numeric matrix (d x n) containing the data to be analyzed. Must not contain any `NA` values.}

\item{matName}{A string representing the name of the matrix, used for logging purposes.}

\item{nsim}{An integer specifying the number of bootstrap samples to be used during the estimation process.}

\item{colCent}{A logical value indicating whether to center the columns of the matrix. Default is `FALSE`.}

\item{rowCent}{A logical value indicating whether to center the rows of the matrix. Default is `FALSE`.}

\item{cull}{A numeric value controlling the culling process during signal extraction. Default is `0.5`.}

\item{percentile}{A numeric value representing the percentile for estimating the noise level.}

\item{noiselvl}{Optional. A noise level parameter that can be either a numeric value or 'ks' to use the `ksOpt` function for noise level estimation. If not provided, an optimal shrinkage method will be used.}
}
\value{
A list containing:
\describe{
  \item{VBar}{Matrix representing the adjusted signal row space.}
  \item{UBar}{Matrix representing the adjusted signal column space.}
  \item{phiBar}{Numeric value of the adjusted perturbation angle.}
  \item{psiBar}{Numeric value of the loadings perturbation angle.}
  \item{rBar}{Integer representing the adjusted signal rank.}
  \item{EHat}{Matrix representing the estimated noise.}
  \item{singVals}{Vector of singular values before shrinkage.}
  \item{singValsHat}{Vector of singular values after shrinkage.}
  \item{rSteps}{List of steps used in signal rank adjustment.}
  \item{VVHatCacheBar}{List of matrices from bootstrap validation steps.}
  \item{UUHatCacheBar}{List of matrices from bootstrap validation steps.}
}
}
\description{
The `MatSignalExtractJP` function performs signal extraction from a data matrix to estimate the signal rank, signal row space, corresponding perturbation angles, and noise matrix. It adjusts the signals based on random direction angles and uses bootstrap estimation to refine the results.
}
